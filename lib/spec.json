{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://states.amazonaws.com/"
        },
        {
            "url": "http://states.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "<fullname>AWS Step Functions</fullname> <p>AWS Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on AWS, your own servers, or any system that has access to AWS. You can access and use Step Functions using the console, the AWS SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html\">AWS Step Functions Developer Guide</a> </i>.</p>",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "AWS Step Functions",
        "version": "2016-11-23",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/states-2016-11-23.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "states"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://docs.aws.amazon.com/states/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates an activity. An activity is a task that you write in any programming language and host on any machine that has access to AWS Step Functions. Activities must poll Step Functions using the <code>GetActivityTask</code> API action and respond using <code>SendTask*</code> API actions. This function lets Step Functions know the existence of your activity and returns an identifier for use in a state machine and when polling from the activity.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
                "operationId": "CreateActivity",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "activityArn": {
                                            "description": "The Amazon Resource Name (ARN) that identifies the created activity.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "creationDate": {
                                            "description": "The date the activity is created.",
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "activityArn",
                                        "creationDate"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ActivityLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidName",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "TooManyTags",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "<p>The name of the activity to create. This name must be unique for your AWS account and region for 90 days. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/limits.html#service-limits-state-machine-executions\"> Limits Related to State Machine Executions</a> in the <i>AWS Step Functions Developer Guide</i>.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                        "maxLength": 80,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "tags": {
                                        "description": "The list of tags to add to a resource.",
                                        "items": {
                                            "description": "Tags are key-value pairs that can be associated with Step Functions state machines and activities.",
                                            "properties": {
                                                "key": {
                                                    "description": "The key of a tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The value of a tag.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateStateMachine": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates a state machine. A state machine consists of a collection of states that can do work (<code>Task</code> states), determine to which states to transition next (<code>Choice</code> states), stop an execution with an error (<code>Fail</code> states), and so on. State machines are specified using a JSON-based, structured language.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
                "operationId": "CreateStateMachine",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "creationDate": {
                                            "description": "The date the state machine is created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "stateMachineArn": {
                                            "description": "The Amazon Resource Name (ARN) that identifies the created state machine.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "stateMachineArn",
                                        "creationDate"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDefinition",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidName",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "StateMachineAlreadyExists",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "StateMachineDeleting",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "StateMachineLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "TooManyTags",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "definition": {
                                        "description": "The Amazon States Language definition of the state machine. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a>.",
                                        "format": "password",
                                        "maxLength": 1048576,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "<p>The name of the state machine. </p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                        "maxLength": 80,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "roleArn": {
                                        "description": "The Amazon Resource Name (ARN) of the IAM role to use for this state machine.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "tags": {
                                        "description": "Tags to be added when creating a state machine.",
                                        "items": {
                                            "description": "Tags are key-value pairs that can be associated with Step Functions state machines and activities.",
                                            "properties": {
                                                "key": {
                                                    "description": "The key of a tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The value of a tag.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "name",
                                    "definition",
                                    "roleArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteActivity": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes an activity.",
                "operationId": "DeleteActivity",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "activityArn": {
                                        "description": "The Amazon Resource Name (ARN) of the activity to delete.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "activityArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteStateMachine": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Deletes a state machine. This is an asynchronous operation: It sets the state machine's status to <code>DELETING</code> and begins the deletion process. Each state machine execution is deleted the next time it makes a state transition.</p> <note> <p>The state machine itself is deleted after all executions are completed or deleted.</p> </note>",
                "operationId": "DeleteStateMachine",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "stateMachineArn": {
                                        "description": "The Amazon Resource Name (ARN) of the state machine to delete.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "stateMachineArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeActivity": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Describes an activity.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
                "operationId": "DescribeActivity",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "activityArn": {
                                            "description": "The Amazon Resource Name (ARN) that identifies the activity.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "creationDate": {
                                            "description": "The date the activity is created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "<p>The name of the activity.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "activityArn",
                                        "name",
                                        "creationDate"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ActivityDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "activityArn": {
                                        "description": "The Amazon Resource Name (ARN) of the activity to describe.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "activityArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeExecution": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Describes an execution.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
                "operationId": "DescribeExecution",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "executionArn": {
                                            "description": "The Amazon Resource Name (ARN) that identifies the execution.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "input": {
                                            "description": "The string that contains the JSON input data of the execution.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "<p>The name of the execution.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "output": {
                                            "description": "<p>The JSON output data of the execution.</p> <note> <p>This field is set only if the execution succeeds. If the execution fails, this field is null.</p> </note>",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "description": "The date the execution is started.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "stateMachineArn": {
                                            "description": "The Amazon Resource Name (ARN) of the executed stated machine.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The current status of the execution.",
                                            "enum": [
                                                "RUNNING",
                                                "SUCCEEDED",
                                                "FAILED",
                                                "TIMED_OUT",
                                                "ABORTED"
                                            ],
                                            "type": "string"
                                        },
                                        "stopDate": {
                                            "description": "If the execution has already ended, the date the execution stopped.",
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "executionArn",
                                        "stateMachineArn",
                                        "status",
                                        "startDate",
                                        "input"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ExecutionDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "executionArn": {
                                        "description": "The Amazon Resource Name (ARN) of the execution to describe.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "executionArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeStateMachine": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Describes a state machine.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
                "operationId": "DescribeStateMachine",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "creationDate": {
                                            "description": "The date the state machine is created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "definition": {
                                            "description": "The Amazon States Language definition of the state machine. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a>.",
                                            "format": "password",
                                            "maxLength": 1048576,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "<p>The name of the state machine.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "roleArn": {
                                            "description": "The Amazon Resource Name (ARN) of the IAM role used when creating this state machine. (The IAM role maintains security by granting Step Functions access to AWS resources.)",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "stateMachineArn": {
                                            "description": "The Amazon Resource Name (ARN) that identifies the state machine.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The current status of the state machine.",
                                            "enum": [
                                                "ACTIVE",
                                                "DELETING"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "stateMachineArn",
                                        "name",
                                        "definition",
                                        "roleArn",
                                        "creationDate"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "StateMachineDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "stateMachineArn": {
                                        "description": "The Amazon Resource Name (ARN) of the state machine to describe.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "stateMachineArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeStateMachineForExecution": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Describes the state machine associated with a specific execution.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
                "operationId": "DescribeStateMachineForExecution",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "definition": {
                                            "description": "The Amazon States Language definition of the state machine. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a>.",
                                            "format": "password",
                                            "maxLength": 1048576,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the state machine associated with the execution.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "roleArn": {
                                            "description": "The Amazon Resource Name (ARN) of the IAM role of the State Machine for the execution. ",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "stateMachineArn": {
                                            "description": "The Amazon Resource Name (ARN) of the state machine associated with the execution.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "updateDate": {
                                            "description": "The date and time the state machine associated with an execution was updated. For a newly created state machine, this is the creation date.",
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "stateMachineArn",
                                        "name",
                                        "definition",
                                        "roleArn",
                                        "updateDate"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ExecutionDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "executionArn": {
                                        "description": "The Amazon Resource Name (ARN) of the execution you want state machine information for.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "executionArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetActivityTask": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Used by workers to retrieve a task (with the specified activity ARN) which has been scheduled for execution by a running state machine. This initiates a long poll, where the service holds the HTTP connection open and responds as soon as a task becomes available (i.e. an execution of a task of this type is needed.) The maximum time the service holds on to the request before responding is 60 seconds. If no task is available within 60 seconds, the poll returns a <code>taskToken</code> with a null string.</p> <important> <p>Workers should set their client side socket timeout to at least 65 seconds (5 seconds higher than the maximum time the service may hold the poll request).</p> <p>Polling with <code>GetActivityTask</code> can cause latency in some implementations. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/bp-activity-pollers.html\">Avoid Latency When Polling for Activity Tasks</a> in the Step Functions Developer Guide.</p> </important>",
                "operationId": "GetActivityTask",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "input": {
                                            "description": "The string that contains the JSON input data for the task.",
                                            "format": "password",
                                            "maxLength": 65536,
                                            "type": "string"
                                        },
                                        "taskToken": {
                                            "description": "A token that identifies the scheduled task. This token must be copied and included in subsequent calls to <a>SendTaskHeartbeat</a>, <a>SendTaskSuccess</a> or <a>SendTaskFailure</a> in order to report the progress or completion of the task.",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ActivityDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ActivityWorkerLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "activityArn": {
                                        "description": "The Amazon Resource Name (ARN) of the activity to retrieve tasks from (assigned when you create the task using <a>CreateActivity</a>.)",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "workerName": {
                                        "description": "You can provide an arbitrary name in order to identify the worker that the task is assigned to. This name is used when it is logged in the execution history.",
                                        "maxLength": 80,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "activityArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetExecutionHistory": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Returns the history of the specified execution as a list of events. By default, the results are returned in ascending order of the <code>timeStamp</code> of the events. Use the <code>reverseOrder</code> parameter to get the latest events first.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p>",
                "operationId": "GetExecutionHistory",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "maxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "events": {
                                            "description": "The list of events that occurred in the execution.",
                                            "items": {
                                                "description": "Contains details about the events of an execution.",
                                                "properties": {
                                                    "activityFailedEventDetails": {
                                                        "description": "Contains details about an activity that failed during an execution.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the failure.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "activityScheduleFailedEventDetails": {
                                                        "description": "Contains details about an activity schedule event that failed during an execution.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the failure.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "activityScheduledEventDetails": {
                                                        "description": "Contains details about an activity scheduled during an execution.",
                                                        "properties": {
                                                            "heartbeatInSeconds": {
                                                                "description": "The maximum allowed duration between two heartbeats for the activity task.",
                                                                "type": "integer"
                                                            },
                                                            "input": {
                                                                "description": "The JSON data input to the activity task.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "type": "string"
                                                            },
                                                            "resource": {
                                                                "description": "The Amazon Resource Name (ARN) of the scheduled activity.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "timeoutInSeconds": {
                                                                "description": "The maximum allowed duration of the activity task.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "resource"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "activityStartedEventDetails": {
                                                        "description": "Contains details about the start of an activity during an execution.",
                                                        "properties": {
                                                            "workerName": {
                                                                "description": "The name of the worker that the task is assigned to. These names are provided by the workers when calling <a>GetActivityTask</a>.",
                                                                "maxLength": 256,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "activitySucceededEventDetails": {
                                                        "description": "Contains details about an activity that successfully terminated during an execution.",
                                                        "properties": {
                                                            "output": {
                                                                "description": "The JSON data output by the activity task.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "activityTimedOutEventDetails": {
                                                        "description": "Contains details about an activity timeout that occurred during an execution.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the timeout.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "executionAbortedEventDetails": {
                                                        "description": "Contains details about an abort of an execution.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the failure.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "executionFailedEventDetails": {
                                                        "description": "Contains details about an execution failure event.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the failure.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "executionStartedEventDetails": {
                                                        "description": "Contains details about the start of the execution.",
                                                        "properties": {
                                                            "input": {
                                                                "description": "The JSON data input to the execution.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "type": "string"
                                                            },
                                                            "roleArn": {
                                                                "description": "The Amazon Resource Name (ARN) of the IAM role used for executing AWS Lambda tasks.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "executionSucceededEventDetails": {
                                                        "description": "Contains details about the successful termination of the execution.",
                                                        "properties": {
                                                            "output": {
                                                                "description": "The JSON data output by the execution.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "executionTimedOutEventDetails": {
                                                        "description": "Contains details about the execution timeout that occurred during the execution.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the timeout.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "id": {
                                                        "description": "The id of the event. Events are numbered sequentially, starting at one.",
                                                        "type": "integer"
                                                    },
                                                    "lambdaFunctionFailedEventDetails": {
                                                        "description": "Contains details about a lambda function that failed during an execution.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the failure.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "lambdaFunctionScheduleFailedEventDetails": {
                                                        "description": "Contains details about a failed lambda function schedule event that occurred during an execution.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the failure.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "lambdaFunctionScheduledEventDetails": {
                                                        "description": "Contains details about a lambda function scheduled during an execution.",
                                                        "properties": {
                                                            "input": {
                                                                "description": "The JSON data input to the lambda function.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "type": "string"
                                                            },
                                                            "resource": {
                                                                "description": "The Amazon Resource Name (ARN) of the scheduled lambda function.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "timeoutInSeconds": {
                                                                "description": "The maximum allowed duration of the lambda function.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "resource"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "lambdaFunctionStartFailedEventDetails": {
                                                        "description": "Contains details about a lambda function that failed to start during an execution.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the failure.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "lambdaFunctionSucceededEventDetails": {
                                                        "description": "Contains details about a lambda function that terminated successfully during an execution.",
                                                        "properties": {
                                                            "output": {
                                                                "description": "The JSON data output by the lambda function.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "lambdaFunctionTimedOutEventDetails": {
                                                        "description": "Contains details about a lambda function timeout that occurred during an execution.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the timeout.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "previousEventId": {
                                                        "description": "The id of the previous event.",
                                                        "type": "integer"
                                                    },
                                                    "stateEnteredEventDetails": {
                                                        "description": "Contains details about a state entered during an execution.",
                                                        "properties": {
                                                            "input": {
                                                                "description": "The string that contains the JSON input data for the state.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "The name of the state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "name"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "stateExitedEventDetails": {
                                                        "description": "Contains details about an exit from a state during an execution.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "<p>The name of the state.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "output": {
                                                                "description": "The JSON output data of the state.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "name"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "taskFailedEventDetails": {
                                                        "description": "Contains details about the failure of a task.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the failure.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "resource": {
                                                                "description": "The service name of the resource in a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "resourceType": {
                                                                "description": "The action of the resource called by a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "resourceType",
                                                            "resource"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "taskScheduledEventDetails": {
                                                        "description": "Contains details about a task that was scheduled.",
                                                        "properties": {
                                                            "parameters": {
                                                                "description": "The JSON data passed to the resource referenced in a task state.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "region": {
                                                                "description": "The region of the scheduled task",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "resource": {
                                                                "description": "The service name of the resource in a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "resourceType": {
                                                                "description": "The action of the resource called by a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "timeoutInSeconds": {
                                                                "description": "The maximum allowed duration of the task.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "resourceType",
                                                            "resource",
                                                            "region",
                                                            "parameters"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "taskStartFailedEventDetails": {
                                                        "description": "Contains details about a task that failed to start.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the failure.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "resource": {
                                                                "description": "The service name of the resource in a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "resourceType": {
                                                                "description": "The action of the resource called by a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "resourceType",
                                                            "resource"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "taskStartedEventDetails": {
                                                        "description": "Contains details about a task that was started.",
                                                        "properties": {
                                                            "resource": {
                                                                "description": "The service name of the resource in a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "resourceType": {
                                                                "description": "The action of the resource called by a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "resourceType",
                                                            "resource"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "taskSubmitFailedEventDetails": {
                                                        "description": "Contains details about a task that where the submit failed.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the failure.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "resource": {
                                                                "description": "The service name of the resource in a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "resourceType": {
                                                                "description": "The action of the resource called by a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "resourceType",
                                                            "resource"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "taskSubmittedEventDetails": {
                                                        "description": "Contains details about a submitted task.",
                                                        "properties": {
                                                            "output": {
                                                                "description": "The response from a resource when a task has started.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "type": "string"
                                                            },
                                                            "resource": {
                                                                "description": "The service name of the resource in a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "resourceType": {
                                                                "description": "The action of the resource called by a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "resourceType",
                                                            "resource"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "taskSucceededEventDetails": {
                                                        "description": "Contains details about a task that succeeded.",
                                                        "properties": {
                                                            "output": {
                                                                "description": "The full JSON response from a resource when a task has succeeded. This response becomes the output of the related task.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "type": "string"
                                                            },
                                                            "resource": {
                                                                "description": "The service name of the resource in a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "resourceType": {
                                                                "description": "The action of the resource called by a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "resourceType",
                                                            "resource"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "taskTimedOutEventDetails": {
                                                        "description": "Contains details about a task that timed out.",
                                                        "properties": {
                                                            "cause": {
                                                                "description": "A more detailed explanation of the cause of the failure.",
                                                                "format": "password",
                                                                "maxLength": 32768,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "description": "The error code of the failure.",
                                                                "format": "password",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "resource": {
                                                                "description": "The service name of the resource in a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "resourceType": {
                                                                "description": "The action of the resource called by a task state.",
                                                                "maxLength": 80,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "resourceType",
                                                            "resource"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "timestamp": {
                                                        "description": "The date and time the event occurred.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "The type of the event.",
                                                        "enum": [
                                                            "ActivityFailed",
                                                            "ActivityScheduleFailed",
                                                            "ActivityScheduled",
                                                            "ActivityStarted",
                                                            "ActivitySucceeded",
                                                            "ActivityTimedOut",
                                                            "ChoiceStateEntered",
                                                            "ChoiceStateExited",
                                                            "TaskFailed",
                                                            "TaskScheduled",
                                                            "TaskStartFailed",
                                                            "TaskStarted",
                                                            "TaskSubmitFailed",
                                                            "TaskSubmitted",
                                                            "TaskSucceeded",
                                                            "TaskTimedOut",
                                                            "ExecutionFailed",
                                                            "ExecutionStarted",
                                                            "ExecutionSucceeded",
                                                            "ExecutionAborted",
                                                            "ExecutionTimedOut",
                                                            "FailStateEntered",
                                                            "LambdaFunctionFailed",
                                                            "LambdaFunctionScheduleFailed",
                                                            "LambdaFunctionScheduled",
                                                            "LambdaFunctionStartFailed",
                                                            "LambdaFunctionStarted",
                                                            "LambdaFunctionSucceeded",
                                                            "LambdaFunctionTimedOut",
                                                            "SucceedStateEntered",
                                                            "SucceedStateExited",
                                                            "TaskStateAborted",
                                                            "TaskStateEntered",
                                                            "TaskStateExited",
                                                            "PassStateEntered",
                                                            "PassStateExited",
                                                            "ParallelStateAborted",
                                                            "ParallelStateEntered",
                                                            "ParallelStateExited",
                                                            "ParallelStateFailed",
                                                            "ParallelStateStarted",
                                                            "ParallelStateSucceeded",
                                                            "WaitStateAborted",
                                                            "WaitStateEntered",
                                                            "WaitStateExited"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "timestamp",
                                                    "type",
                                                    "id"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "events"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ExecutionDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "executionArn": {
                                        "description": "The Amazon Resource Name (ARN) of the execution.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxResults": {
                                        "description": "<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>",
                                        "maximum": 1000,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "nextToken": {
                                        "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "reverseOrder": {
                                        "description": "Lists events in descending order of their <code>timeStamp</code>.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "executionArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListActivities": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Lists the existing activities.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
                "operationId": "ListActivities",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "maxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "activities": {
                                            "description": "The list of activities.",
                                            "items": {
                                                "description": "Contains details about an activity.",
                                                "properties": {
                                                    "activityArn": {
                                                        "description": "The Amazon Resource Name (ARN) that identifies the activity.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "creationDate": {
                                                        "description": "The date the activity is created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "<p>The name of the activity.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                                        "maxLength": 80,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "activityArn",
                                                    "name",
                                                    "creationDate"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "activities"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "maxResults": {
                                        "description": "<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>",
                                        "maximum": 1000,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "nextToken": {
                                        "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListExecutions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Lists the executions of a state machine that meet the filtering criteria. Results are sorted by time, with the most recent execution first.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
                "operationId": "ListExecutions",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "maxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "executions": {
                                            "description": "The list of matching executions.",
                                            "items": {
                                                "description": "Contains details about an execution.",
                                                "properties": {
                                                    "executionArn": {
                                                        "description": "The Amazon Resource Name (ARN) that identifies the execution.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "<p>The name of the execution.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                                        "maxLength": 80,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "description": "The date the execution started.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "stateMachineArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the executed state machine.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "description": "The current status of the execution.",
                                                        "enum": [
                                                            "RUNNING",
                                                            "SUCCEEDED",
                                                            "FAILED",
                                                            "TIMED_OUT",
                                                            "ABORTED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "stopDate": {
                                                        "description": "If the execution already ended, the date the execution stopped.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "executionArn",
                                                    "stateMachineArn",
                                                    "name",
                                                    "status",
                                                    "startDate"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "executions"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "StateMachineDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "maxResults": {
                                        "description": "<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>",
                                        "maximum": 1000,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "nextToken": {
                                        "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "stateMachineArn": {
                                        "description": "The Amazon Resource Name (ARN) of the state machine whose executions is listed.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "statusFilter": {
                                        "description": "If specified, only list the executions whose current execution status matches the given filter.",
                                        "enum": [
                                            "RUNNING",
                                            "SUCCEEDED",
                                            "FAILED",
                                            "TIMED_OUT",
                                            "ABORTED"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "stateMachineArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListStateMachines": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Lists the existing state machines.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
                "operationId": "ListStateMachines",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "maxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "nextToken": {
                                            "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "stateMachines": {
                                            "items": {
                                                "description": "Contains details about the state machine.",
                                                "properties": {
                                                    "creationDate": {
                                                        "description": "The date the state machine is created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "<p>The name of the state machine.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                                        "maxLength": 80,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "stateMachineArn": {
                                                        "description": "The Amazon Resource Name (ARN) that identifies the state machine.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "stateMachineArn",
                                                    "name",
                                                    "creationDate"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "stateMachines"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "maxResults": {
                                        "description": "<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>",
                                        "maximum": 1000,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "nextToken": {
                                        "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListTagsForResource": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "List tags for a given resource.",
                "operationId": "ListTagsForResource",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "tags": {
                                            "description": "An array of tags associated with the resource.",
                                            "items": {
                                                "description": "Tags are key-value pairs that can be associated with Step Functions state machines and activities.",
                                                "properties": {
                                                    "key": {
                                                        "description": "The key of a tag.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "description": "The value of a tag.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "resourceArn": {
                                        "description": "The Amazon Resource Name (ARN) for the Step Functions state machine or activity.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "resourceArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#SendTaskFailure": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Used by workers to report that the task identified by the <code>taskToken</code> failed.",
                "operationId": "SendTaskFailure",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "TaskDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "TaskTimedOut",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cause": {
                                        "description": "A more detailed explanation of the cause of the failure.",
                                        "format": "password",
                                        "maxLength": 32768,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "error": {
                                        "description": "The error code of the failure.",
                                        "format": "password",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "taskToken": {
                                        "description": "The token that represents this task. Task tokens are generated by the service when the tasks are assigned to a worker (see GetActivityTask::taskToken).",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "taskToken"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#SendTaskHeartbeat": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Used by workers to report to the service that the task represented by the specified <code>taskToken</code> is still making progress. This action resets the <code>Heartbeat</code> clock. The <code>Heartbeat</code> threshold is specified in the state machine's Amazon States Language definition. This action does not in itself create an event in the execution history. However, if the task times out, the execution history contains an <code>ActivityTimedOut</code> event.</p> <note> <p>The <code>Timeout</code> of a task, defined in the state machine's Amazon States Language definition, is its maximum allowed duration, regardless of the number of <a>SendTaskHeartbeat</a> requests received.</p> </note> <note> <p>This operation is only useful for long-lived tasks to report the liveliness of the task.</p> </note>",
                "operationId": "SendTaskHeartbeat",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "TaskDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "TaskTimedOut",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "taskToken": {
                                        "description": "The token that represents this task. Task tokens are generated by the service when the tasks are assigned to a worker (see <a>GetActivityTaskOutput$taskToken</a>).",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "taskToken"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#SendTaskSuccess": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Used by workers to report that the task identified by the <code>taskToken</code> completed successfully.",
                "operationId": "SendTaskSuccess",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "TaskDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidOutput",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "TaskTimedOut",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "output": {
                                        "description": "The JSON output of the task.",
                                        "format": "password",
                                        "maxLength": 32768,
                                        "type": "string"
                                    },
                                    "taskToken": {
                                        "description": "The token that represents this task. Task tokens are generated by the service when the tasks are assigned to a worker (see <a>GetActivityTaskOutput$taskToken</a>).",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "taskToken",
                                    "output"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StartExecution": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Starts a state machine execution.</p> <note> <p> <code>StartExecution</code> is idempotent. If <code>StartExecution</code> is called with the same name and input as a running execution, the call will succeed and return the same response as the original request. If the execution is closed or if the input is different, it will return a 400 <code>ExecutionAlreadyExists</code> error. Names can be reused after 90 days. </p> </note>",
                "operationId": "StartExecution",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "executionArn": {
                                            "description": "The Amazon Resource Name (ARN) that identifies the execution.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "description": "The date the execution is started.",
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "executionArn",
                                        "startDate"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ExecutionLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ExecutionAlreadyExists",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidExecutionInput",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidName",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "StateMachineDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "StateMachineDeleting",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "input": {
                                        "description": "<p>The string that contains the JSON input data for the execution, for example:</p> <p> <code>\"input\": \"{\\\"first_name\\\" : \\\"test\\\"}\"</code> </p> <note> <p>If you don't include any JSON input data, you still must include the two braces, for example: <code>\"input\": \"{}\"</code> </p> </note>",
                                        "format": "password",
                                        "maxLength": 32768,
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "<p>The name of the execution. This name must be unique for your AWS account, region, and state machine for 90 days. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/limits.html#service-limits-state-machine-executions\"> Limits Related to State Machine Executions</a> in the <i>AWS Step Functions Developer Guide</i>.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                        "maxLength": 80,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "stateMachineArn": {
                                        "description": "The Amazon Resource Name (ARN) of the state machine to execute.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "stateMachineArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StopExecution": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Stops an execution.",
                "operationId": "StopExecution",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "stopDate": {
                                            "description": "The date the execution is stopped.",
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "stopDate"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ExecutionDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cause": {
                                        "description": "A more detailed explanation of the cause of the failure.",
                                        "format": "password",
                                        "maxLength": 32768,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "error": {
                                        "description": "The error code of the failure.",
                                        "format": "password",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "executionArn": {
                                        "description": "The Amazon Resource Name (ARN) of the execution to stop.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "executionArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#TagResource": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Add a tag to a Step Functions resource.",
                "operationId": "TagResource",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "TooManyTags",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "resourceArn": {
                                        "description": "The Amazon Resource Name (ARN) for the Step Functions state machine or activity.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "tags": {
                                        "description": "<p>The list of tags to add to a resource.</p> <p>Tags may only contain unicode letters, digits, whitespace, or these symbols: <code>_ . : / = + - @</code>.</p>",
                                        "items": {
                                            "description": "Tags are key-value pairs that can be associated with Step Functions state machines and activities.",
                                            "properties": {
                                                "key": {
                                                    "description": "The key of a tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The value of a tag.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "resourceArn",
                                    "tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UntagResource": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Remove a tag from a Step Functions resource",
                "operationId": "UntagResource",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "resourceArn": {
                                        "description": "The Amazon Resource Name (ARN) for the Step Functions state machine or activity.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "tagKeys": {
                                        "description": "The list of tags to remove from the resource.",
                                        "items": {
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "resourceArn",
                                    "tagKeys"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateStateMachine": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Updates an existing state machine by modifying its <code>definition</code> and/or <code>roleArn</code>. Running executions will continue to use the previous <code>definition</code> and <code>roleArn</code>. You must include at least one of <code>definition</code> or <code>roleArn</code> or you will receive a <code>MissingRequiredParameter</code> error.</p> <note> <p>All <code>StartExecution</code> calls within a few seconds will use the updated <code>definition</code> and <code>roleArn</code>. Executions started immediately after calling <code>UpdateStateMachine</code> may use the previous state machine <code>definition</code> and <code>roleArn</code>. </p> </note>",
                "operationId": "UpdateStateMachine",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "updateDate": {
                                            "description": "The date and time the state machine was updated.",
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "updateDate"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidArn",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDefinition",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "MissingRequiredParameter",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "StateMachineDeleting",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "StateMachineDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "definition": {
                                        "description": "The Amazon States Language definition of the state machine. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a>.",
                                        "format": "password",
                                        "maxLength": 1048576,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "roleArn": {
                                        "description": "The Amazon Resource Name (ARN) of the IAM role of the state machine.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "stateMachineArn": {
                                        "description": "The Amazon Resource Name (ARN) of the state machine.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "stateMachineArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ActivityDoesNotExist": {},
            "ActivityFailedEventDetails": {
                "description": "Contains details about an activity that failed during an execution.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the failure.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityLimitExceeded": {},
            "ActivityList": {
                "items": {
                    "description": "Contains details about an activity.",
                    "properties": {
                        "activityArn": {
                            "description": "The Amazon Resource Name (ARN) that identifies the activity.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "creationDate": {
                            "description": "The date the activity is created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "name": {
                            "description": "<p>The name of the activity.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                            "maxLength": 80,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "activityArn",
                        "name",
                        "creationDate"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "ActivityListItem": {
                "description": "Contains details about an activity.",
                "properties": {
                    "activityArn": {
                        "description": "The Amazon Resource Name (ARN) that identifies the activity.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "creationDate": {
                        "description": "The date the activity is created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "description": "<p>The name of the activity.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "activityArn",
                    "name",
                    "creationDate"
                ],
                "type": "object"
            },
            "ActivityScheduleFailedEventDetails": {
                "description": "Contains details about an activity schedule failure that occurred during an execution.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the failure.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityScheduledEventDetails": {
                "description": "Contains details about an activity scheduled during an execution.",
                "properties": {
                    "heartbeatInSeconds": {
                        "description": "The maximum allowed duration between two heartbeats for the activity task.",
                        "type": "integer"
                    },
                    "input": {
                        "description": "The JSON data input to the activity task.",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    },
                    "resource": {
                        "description": "The Amazon Resource Name (ARN) of the scheduled activity.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "timeoutInSeconds": {
                        "description": "The maximum allowed duration of the activity task.",
                        "type": "integer"
                    }
                },
                "required": [
                    "resource"
                ],
                "type": "object"
            },
            "ActivityStartedEventDetails": {
                "description": "Contains details about the start of an activity during an execution.",
                "properties": {
                    "workerName": {
                        "description": "The name of the worker that the task is assigned to. These names are provided by the workers when calling <a>GetActivityTask</a>.",
                        "maxLength": 256,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivitySucceededEventDetails": {
                "description": "Contains details about an activity that successfully terminated during an execution.",
                "properties": {
                    "output": {
                        "description": "The JSON data output by the activity task.",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityTimedOutEventDetails": {
                "description": "Contains details about an activity timeout that occurred during an execution.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the timeout.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityWorkerLimitExceeded": {},
            "Arn": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "ConnectorParameters": {
                "format": "password",
                "maxLength": 32768,
                "minLength": 0,
                "type": "string"
            },
            "CreateActivityInput": {
                "properties": {
                    "name": {
                        "description": "<p>The name of the activity to create. This name must be unique for your AWS account and region for 90 days. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/limits.html#service-limits-state-machine-executions\"> Limits Related to State Machine Executions</a> in the <i>AWS Step Functions Developer Guide</i>.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "tags": {
                        "description": "The list of tags to add to a resource.",
                        "items": {
                            "description": "Tags are key-value pairs that can be associated with Step Functions state machines and activities.",
                            "properties": {
                                "key": {
                                    "description": "The key of a tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The value of a tag.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "CreateActivityOutput": {
                "properties": {
                    "activityArn": {
                        "description": "The Amazon Resource Name (ARN) that identifies the created activity.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "creationDate": {
                        "description": "The date the activity is created.",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "activityArn",
                    "creationDate"
                ],
                "type": "object"
            },
            "CreateStateMachineInput": {
                "properties": {
                    "definition": {
                        "description": "The Amazon States Language definition of the state machine. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a>.",
                        "format": "password",
                        "maxLength": 1048576,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "<p>The name of the state machine. </p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "roleArn": {
                        "description": "The Amazon Resource Name (ARN) of the IAM role to use for this state machine.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "tags": {
                        "description": "Tags to be added when creating a state machine.",
                        "items": {
                            "description": "Tags are key-value pairs that can be associated with Step Functions state machines and activities.",
                            "properties": {
                                "key": {
                                    "description": "The key of a tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The value of a tag.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "definition",
                    "roleArn"
                ],
                "type": "object"
            },
            "CreateStateMachineOutput": {
                "properties": {
                    "creationDate": {
                        "description": "The date the state machine is created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "stateMachineArn": {
                        "description": "The Amazon Resource Name (ARN) that identifies the created state machine.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "stateMachineArn",
                    "creationDate"
                ],
                "type": "object"
            },
            "Definition": {
                "format": "password",
                "maxLength": 1048576,
                "minLength": 1,
                "type": "string"
            },
            "DeleteActivityInput": {
                "properties": {
                    "activityArn": {
                        "description": "The Amazon Resource Name (ARN) of the activity to delete.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "activityArn"
                ],
                "type": "object"
            },
            "DeleteActivityOutput": {
                "properties": {},
                "type": "object"
            },
            "DeleteStateMachineInput": {
                "properties": {
                    "stateMachineArn": {
                        "description": "The Amazon Resource Name (ARN) of the state machine to delete.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "stateMachineArn"
                ],
                "type": "object"
            },
            "DeleteStateMachineOutput": {
                "properties": {},
                "type": "object"
            },
            "DescribeActivityInput": {
                "properties": {
                    "activityArn": {
                        "description": "The Amazon Resource Name (ARN) of the activity to describe.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "activityArn"
                ],
                "type": "object"
            },
            "DescribeActivityOutput": {
                "properties": {
                    "activityArn": {
                        "description": "The Amazon Resource Name (ARN) that identifies the activity.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "creationDate": {
                        "description": "The date the activity is created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "description": "<p>The name of the activity.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "activityArn",
                    "name",
                    "creationDate"
                ],
                "type": "object"
            },
            "DescribeExecutionInput": {
                "properties": {
                    "executionArn": {
                        "description": "The Amazon Resource Name (ARN) of the execution to describe.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "executionArn"
                ],
                "type": "object"
            },
            "DescribeExecutionOutput": {
                "properties": {
                    "executionArn": {
                        "description": "The Amazon Resource Name (ARN) that identifies the execution.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "input": {
                        "description": "The string that contains the JSON input data of the execution.",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    },
                    "name": {
                        "description": "<p>The name of the execution.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "output": {
                        "description": "<p>The JSON output data of the execution.</p> <note> <p>This field is set only if the execution succeeds. If the execution fails, this field is null.</p> </note>",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    },
                    "startDate": {
                        "description": "The date the execution is started.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "stateMachineArn": {
                        "description": "The Amazon Resource Name (ARN) of the executed stated machine.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "status": {
                        "description": "The current status of the execution.",
                        "enum": [
                            "RUNNING",
                            "SUCCEEDED",
                            "FAILED",
                            "TIMED_OUT",
                            "ABORTED"
                        ],
                        "type": "string"
                    },
                    "stopDate": {
                        "description": "If the execution has already ended, the date the execution stopped.",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "executionArn",
                    "stateMachineArn",
                    "status",
                    "startDate",
                    "input"
                ],
                "type": "object"
            },
            "DescribeStateMachineForExecutionInput": {
                "properties": {
                    "executionArn": {
                        "description": "The Amazon Resource Name (ARN) of the execution you want state machine information for.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "executionArn"
                ],
                "type": "object"
            },
            "DescribeStateMachineForExecutionOutput": {
                "properties": {
                    "definition": {
                        "description": "The Amazon States Language definition of the state machine. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a>.",
                        "format": "password",
                        "maxLength": 1048576,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the state machine associated with the execution.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "roleArn": {
                        "description": "The Amazon Resource Name (ARN) of the IAM role of the State Machine for the execution. ",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "stateMachineArn": {
                        "description": "The Amazon Resource Name (ARN) of the state machine associated with the execution.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "updateDate": {
                        "description": "The date and time the state machine associated with an execution was updated. For a newly created state machine, this is the creation date.",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "stateMachineArn",
                    "name",
                    "definition",
                    "roleArn",
                    "updateDate"
                ],
                "type": "object"
            },
            "DescribeStateMachineInput": {
                "properties": {
                    "stateMachineArn": {
                        "description": "The Amazon Resource Name (ARN) of the state machine to describe.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "stateMachineArn"
                ],
                "type": "object"
            },
            "DescribeStateMachineOutput": {
                "properties": {
                    "creationDate": {
                        "description": "The date the state machine is created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "definition": {
                        "description": "The Amazon States Language definition of the state machine. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a>.",
                        "format": "password",
                        "maxLength": 1048576,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "<p>The name of the state machine.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "roleArn": {
                        "description": "The Amazon Resource Name (ARN) of the IAM role used when creating this state machine. (The IAM role maintains security by granting Step Functions access to AWS resources.)",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "stateMachineArn": {
                        "description": "The Amazon Resource Name (ARN) that identifies the state machine.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "status": {
                        "description": "The current status of the state machine.",
                        "enum": [
                            "ACTIVE",
                            "DELETING"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "stateMachineArn",
                    "name",
                    "definition",
                    "roleArn",
                    "creationDate"
                ],
                "type": "object"
            },
            "EventId": {
                "type": "integer"
            },
            "ExecutionAbortedEventDetails": {
                "description": "Contains details about an abort of an execution.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the failure.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExecutionAlreadyExists": {},
            "ExecutionDoesNotExist": {},
            "ExecutionFailedEventDetails": {
                "description": "Contains details about an execution failure event.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the failure.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExecutionLimitExceeded": {},
            "ExecutionList": {
                "items": {
                    "description": "Contains details about an execution.",
                    "properties": {
                        "executionArn": {
                            "description": "The Amazon Resource Name (ARN) that identifies the execution.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "name": {
                            "description": "<p>The name of the execution.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                            "maxLength": 80,
                            "minLength": 1,
                            "type": "string"
                        },
                        "startDate": {
                            "description": "The date the execution started.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "stateMachineArn": {
                            "description": "The Amazon Resource Name (ARN) of the executed state machine.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "status": {
                            "description": "The current status of the execution.",
                            "enum": [
                                "RUNNING",
                                "SUCCEEDED",
                                "FAILED",
                                "TIMED_OUT",
                                "ABORTED"
                            ],
                            "type": "string"
                        },
                        "stopDate": {
                            "description": "If the execution already ended, the date the execution stopped.",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    "required": [
                        "executionArn",
                        "stateMachineArn",
                        "name",
                        "status",
                        "startDate"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "ExecutionListItem": {
                "description": "Contains details about an execution.",
                "properties": {
                    "executionArn": {
                        "description": "The Amazon Resource Name (ARN) that identifies the execution.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "<p>The name of the execution.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "startDate": {
                        "description": "The date the execution started.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "stateMachineArn": {
                        "description": "The Amazon Resource Name (ARN) of the executed state machine.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "status": {
                        "description": "The current status of the execution.",
                        "enum": [
                            "RUNNING",
                            "SUCCEEDED",
                            "FAILED",
                            "TIMED_OUT",
                            "ABORTED"
                        ],
                        "type": "string"
                    },
                    "stopDate": {
                        "description": "If the execution already ended, the date the execution stopped.",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "executionArn",
                    "stateMachineArn",
                    "name",
                    "status",
                    "startDate"
                ],
                "type": "object"
            },
            "ExecutionStartedEventDetails": {
                "description": "Contains details about the start of the execution.",
                "properties": {
                    "input": {
                        "description": "The JSON data input to the execution.",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    },
                    "roleArn": {
                        "description": "The Amazon Resource Name (ARN) of the IAM role used for executing AWS Lambda tasks.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExecutionStatus": {
                "enum": [
                    "RUNNING",
                    "SUCCEEDED",
                    "FAILED",
                    "TIMED_OUT",
                    "ABORTED"
                ],
                "type": "string"
            },
            "ExecutionSucceededEventDetails": {
                "description": "Contains details about the successful termination of the execution.",
                "properties": {
                    "output": {
                        "description": "The JSON data output by the execution.",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExecutionTimedOutEventDetails": {
                "description": "Contains details about the execution timeout that occurred during the execution.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the timeout.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetActivityTaskInput": {
                "properties": {
                    "activityArn": {
                        "description": "The Amazon Resource Name (ARN) of the activity to retrieve tasks from (assigned when you create the task using <a>CreateActivity</a>.)",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "workerName": {
                        "description": "You can provide an arbitrary name in order to identify the worker that the task is assigned to. This name is used when it is logged in the execution history.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "activityArn"
                ],
                "type": "object"
            },
            "GetActivityTaskOutput": {
                "properties": {
                    "input": {
                        "description": "The string that contains the JSON input data for the task.",
                        "format": "password",
                        "maxLength": 65536,
                        "type": "string"
                    },
                    "taskToken": {
                        "description": "A token that identifies the scheduled task. This token must be copied and included in subsequent calls to <a>SendTaskHeartbeat</a>, <a>SendTaskSuccess</a> or <a>SendTaskFailure</a> in order to report the progress or completion of the task.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetExecutionHistoryInput": {
                "properties": {
                    "executionArn": {
                        "description": "The Amazon Resource Name (ARN) of the execution.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "maxResults": {
                        "description": "<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>",
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "nextToken": {
                        "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "reverseOrder": {
                        "description": "Lists events in descending order of their <code>timeStamp</code>.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "executionArn"
                ],
                "type": "object"
            },
            "GetExecutionHistoryOutput": {
                "properties": {
                    "events": {
                        "description": "The list of events that occurred in the execution.",
                        "items": {
                            "description": "Contains details about the events of an execution.",
                            "properties": {
                                "activityFailedEventDetails": {
                                    "description": "Contains details about an activity that failed during an execution.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the failure.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "activityScheduleFailedEventDetails": {
                                    "description": "Contains details about an activity schedule event that failed during an execution.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the failure.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "activityScheduledEventDetails": {
                                    "description": "Contains details about an activity scheduled during an execution.",
                                    "properties": {
                                        "heartbeatInSeconds": {
                                            "description": "The maximum allowed duration between two heartbeats for the activity task.",
                                            "type": "integer"
                                        },
                                        "input": {
                                            "description": "The JSON data input to the activity task.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "type": "string"
                                        },
                                        "resource": {
                                            "description": "The Amazon Resource Name (ARN) of the scheduled activity.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "timeoutInSeconds": {
                                            "description": "The maximum allowed duration of the activity task.",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "resource"
                                    ],
                                    "type": "object"
                                },
                                "activityStartedEventDetails": {
                                    "description": "Contains details about the start of an activity during an execution.",
                                    "properties": {
                                        "workerName": {
                                            "description": "The name of the worker that the task is assigned to. These names are provided by the workers when calling <a>GetActivityTask</a>.",
                                            "maxLength": 256,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "activitySucceededEventDetails": {
                                    "description": "Contains details about an activity that successfully terminated during an execution.",
                                    "properties": {
                                        "output": {
                                            "description": "The JSON data output by the activity task.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "activityTimedOutEventDetails": {
                                    "description": "Contains details about an activity timeout that occurred during an execution.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the timeout.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "executionAbortedEventDetails": {
                                    "description": "Contains details about an abort of an execution.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the failure.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "executionFailedEventDetails": {
                                    "description": "Contains details about an execution failure event.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the failure.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "executionStartedEventDetails": {
                                    "description": "Contains details about the start of the execution.",
                                    "properties": {
                                        "input": {
                                            "description": "The JSON data input to the execution.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "type": "string"
                                        },
                                        "roleArn": {
                                            "description": "The Amazon Resource Name (ARN) of the IAM role used for executing AWS Lambda tasks.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "executionSucceededEventDetails": {
                                    "description": "Contains details about the successful termination of the execution.",
                                    "properties": {
                                        "output": {
                                            "description": "The JSON data output by the execution.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "executionTimedOutEventDetails": {
                                    "description": "Contains details about the execution timeout that occurred during the execution.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the timeout.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "id": {
                                    "description": "The id of the event. Events are numbered sequentially, starting at one.",
                                    "type": "integer"
                                },
                                "lambdaFunctionFailedEventDetails": {
                                    "description": "Contains details about a lambda function that failed during an execution.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the failure.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "lambdaFunctionScheduleFailedEventDetails": {
                                    "description": "Contains details about a failed lambda function schedule event that occurred during an execution.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the failure.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "lambdaFunctionScheduledEventDetails": {
                                    "description": "Contains details about a lambda function scheduled during an execution.",
                                    "properties": {
                                        "input": {
                                            "description": "The JSON data input to the lambda function.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "type": "string"
                                        },
                                        "resource": {
                                            "description": "The Amazon Resource Name (ARN) of the scheduled lambda function.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "timeoutInSeconds": {
                                            "description": "The maximum allowed duration of the lambda function.",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "resource"
                                    ],
                                    "type": "object"
                                },
                                "lambdaFunctionStartFailedEventDetails": {
                                    "description": "Contains details about a lambda function that failed to start during an execution.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the failure.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "lambdaFunctionSucceededEventDetails": {
                                    "description": "Contains details about a lambda function that terminated successfully during an execution.",
                                    "properties": {
                                        "output": {
                                            "description": "The JSON data output by the lambda function.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "lambdaFunctionTimedOutEventDetails": {
                                    "description": "Contains details about a lambda function timeout that occurred during an execution.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the timeout.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "previousEventId": {
                                    "description": "The id of the previous event.",
                                    "type": "integer"
                                },
                                "stateEnteredEventDetails": {
                                    "description": "Contains details about a state entered during an execution.",
                                    "properties": {
                                        "input": {
                                            "description": "The string that contains the JSON input data for the state.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "stateExitedEventDetails": {
                                    "description": "Contains details about an exit from a state during an execution.",
                                    "properties": {
                                        "name": {
                                            "description": "<p>The name of the state.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "output": {
                                            "description": "The JSON output data of the state.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "taskFailedEventDetails": {
                                    "description": "Contains details about the failure of a task.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the failure.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "resource": {
                                            "description": "The service name of the resource in a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "resourceType": {
                                            "description": "The action of the resource called by a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "resourceType",
                                        "resource"
                                    ],
                                    "type": "object"
                                },
                                "taskScheduledEventDetails": {
                                    "description": "Contains details about a task that was scheduled.",
                                    "properties": {
                                        "parameters": {
                                            "description": "The JSON data passed to the resource referenced in a task state.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "region": {
                                            "description": "The region of the scheduled task",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "resource": {
                                            "description": "The service name of the resource in a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "resourceType": {
                                            "description": "The action of the resource called by a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "timeoutInSeconds": {
                                            "description": "The maximum allowed duration of the task.",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "resourceType",
                                        "resource",
                                        "region",
                                        "parameters"
                                    ],
                                    "type": "object"
                                },
                                "taskStartFailedEventDetails": {
                                    "description": "Contains details about a task that failed to start.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the failure.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "resource": {
                                            "description": "The service name of the resource in a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "resourceType": {
                                            "description": "The action of the resource called by a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "resourceType",
                                        "resource"
                                    ],
                                    "type": "object"
                                },
                                "taskStartedEventDetails": {
                                    "description": "Contains details about a task that was started.",
                                    "properties": {
                                        "resource": {
                                            "description": "The service name of the resource in a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "resourceType": {
                                            "description": "The action of the resource called by a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "resourceType",
                                        "resource"
                                    ],
                                    "type": "object"
                                },
                                "taskSubmitFailedEventDetails": {
                                    "description": "Contains details about a task that where the submit failed.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the failure.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "resource": {
                                            "description": "The service name of the resource in a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "resourceType": {
                                            "description": "The action of the resource called by a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "resourceType",
                                        "resource"
                                    ],
                                    "type": "object"
                                },
                                "taskSubmittedEventDetails": {
                                    "description": "Contains details about a submitted task.",
                                    "properties": {
                                        "output": {
                                            "description": "The response from a resource when a task has started.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "type": "string"
                                        },
                                        "resource": {
                                            "description": "The service name of the resource in a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "resourceType": {
                                            "description": "The action of the resource called by a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "resourceType",
                                        "resource"
                                    ],
                                    "type": "object"
                                },
                                "taskSucceededEventDetails": {
                                    "description": "Contains details about a task that succeeded.",
                                    "properties": {
                                        "output": {
                                            "description": "The full JSON response from a resource when a task has succeeded. This response becomes the output of the related task.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "type": "string"
                                        },
                                        "resource": {
                                            "description": "The service name of the resource in a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "resourceType": {
                                            "description": "The action of the resource called by a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "resourceType",
                                        "resource"
                                    ],
                                    "type": "object"
                                },
                                "taskTimedOutEventDetails": {
                                    "description": "Contains details about a task that timed out.",
                                    "properties": {
                                        "cause": {
                                            "description": "A more detailed explanation of the cause of the failure.",
                                            "format": "password",
                                            "maxLength": 32768,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "The error code of the failure.",
                                            "format": "password",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "resource": {
                                            "description": "The service name of the resource in a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "resourceType": {
                                            "description": "The action of the resource called by a task state.",
                                            "maxLength": 80,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "resourceType",
                                        "resource"
                                    ],
                                    "type": "object"
                                },
                                "timestamp": {
                                    "description": "The date and time the event occurred.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "The type of the event.",
                                    "enum": [
                                        "ActivityFailed",
                                        "ActivityScheduleFailed",
                                        "ActivityScheduled",
                                        "ActivityStarted",
                                        "ActivitySucceeded",
                                        "ActivityTimedOut",
                                        "ChoiceStateEntered",
                                        "ChoiceStateExited",
                                        "TaskFailed",
                                        "TaskScheduled",
                                        "TaskStartFailed",
                                        "TaskStarted",
                                        "TaskSubmitFailed",
                                        "TaskSubmitted",
                                        "TaskSucceeded",
                                        "TaskTimedOut",
                                        "ExecutionFailed",
                                        "ExecutionStarted",
                                        "ExecutionSucceeded",
                                        "ExecutionAborted",
                                        "ExecutionTimedOut",
                                        "FailStateEntered",
                                        "LambdaFunctionFailed",
                                        "LambdaFunctionScheduleFailed",
                                        "LambdaFunctionScheduled",
                                        "LambdaFunctionStartFailed",
                                        "LambdaFunctionStarted",
                                        "LambdaFunctionSucceeded",
                                        "LambdaFunctionTimedOut",
                                        "SucceedStateEntered",
                                        "SucceedStateExited",
                                        "TaskStateAborted",
                                        "TaskStateEntered",
                                        "TaskStateExited",
                                        "PassStateEntered",
                                        "PassStateExited",
                                        "ParallelStateAborted",
                                        "ParallelStateEntered",
                                        "ParallelStateExited",
                                        "ParallelStateFailed",
                                        "ParallelStateStarted",
                                        "ParallelStateSucceeded",
                                        "WaitStateAborted",
                                        "WaitStateEntered",
                                        "WaitStateExited"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "timestamp",
                                "type",
                                "id"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "events"
                ],
                "type": "object"
            },
            "HistoryEvent": {
                "description": "Contains details about the events of an execution.",
                "properties": {
                    "activityFailedEventDetails": {
                        "description": "Contains details about an activity that failed during an execution.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the failure.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "activityScheduleFailedEventDetails": {
                        "description": "Contains details about an activity schedule event that failed during an execution.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the failure.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "activityScheduledEventDetails": {
                        "description": "Contains details about an activity scheduled during an execution.",
                        "properties": {
                            "heartbeatInSeconds": {
                                "description": "The maximum allowed duration between two heartbeats for the activity task.",
                                "type": "integer"
                            },
                            "input": {
                                "description": "The JSON data input to the activity task.",
                                "format": "password",
                                "maxLength": 32768,
                                "type": "string"
                            },
                            "resource": {
                                "description": "The Amazon Resource Name (ARN) of the scheduled activity.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "timeoutInSeconds": {
                                "description": "The maximum allowed duration of the activity task.",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "resource"
                        ],
                        "type": "object"
                    },
                    "activityStartedEventDetails": {
                        "description": "Contains details about the start of an activity during an execution.",
                        "properties": {
                            "workerName": {
                                "description": "The name of the worker that the task is assigned to. These names are provided by the workers when calling <a>GetActivityTask</a>.",
                                "maxLength": 256,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "activitySucceededEventDetails": {
                        "description": "Contains details about an activity that successfully terminated during an execution.",
                        "properties": {
                            "output": {
                                "description": "The JSON data output by the activity task.",
                                "format": "password",
                                "maxLength": 32768,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "activityTimedOutEventDetails": {
                        "description": "Contains details about an activity timeout that occurred during an execution.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the timeout.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "executionAbortedEventDetails": {
                        "description": "Contains details about an abort of an execution.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the failure.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "executionFailedEventDetails": {
                        "description": "Contains details about an execution failure event.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the failure.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "executionStartedEventDetails": {
                        "description": "Contains details about the start of the execution.",
                        "properties": {
                            "input": {
                                "description": "The JSON data input to the execution.",
                                "format": "password",
                                "maxLength": 32768,
                                "type": "string"
                            },
                            "roleArn": {
                                "description": "The Amazon Resource Name (ARN) of the IAM role used for executing AWS Lambda tasks.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "executionSucceededEventDetails": {
                        "description": "Contains details about the successful termination of the execution.",
                        "properties": {
                            "output": {
                                "description": "The JSON data output by the execution.",
                                "format": "password",
                                "maxLength": 32768,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "executionTimedOutEventDetails": {
                        "description": "Contains details about the execution timeout that occurred during the execution.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the timeout.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "id": {
                        "description": "The id of the event. Events are numbered sequentially, starting at one.",
                        "type": "integer"
                    },
                    "lambdaFunctionFailedEventDetails": {
                        "description": "Contains details about a lambda function that failed during an execution.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the failure.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "lambdaFunctionScheduleFailedEventDetails": {
                        "description": "Contains details about a failed lambda function schedule event that occurred during an execution.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the failure.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "lambdaFunctionScheduledEventDetails": {
                        "description": "Contains details about a lambda function scheduled during an execution.",
                        "properties": {
                            "input": {
                                "description": "The JSON data input to the lambda function.",
                                "format": "password",
                                "maxLength": 32768,
                                "type": "string"
                            },
                            "resource": {
                                "description": "The Amazon Resource Name (ARN) of the scheduled lambda function.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "timeoutInSeconds": {
                                "description": "The maximum allowed duration of the lambda function.",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "resource"
                        ],
                        "type": "object"
                    },
                    "lambdaFunctionStartFailedEventDetails": {
                        "description": "Contains details about a lambda function that failed to start during an execution.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the failure.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "lambdaFunctionSucceededEventDetails": {
                        "description": "Contains details about a lambda function that terminated successfully during an execution.",
                        "properties": {
                            "output": {
                                "description": "The JSON data output by the lambda function.",
                                "format": "password",
                                "maxLength": 32768,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "lambdaFunctionTimedOutEventDetails": {
                        "description": "Contains details about a lambda function timeout that occurred during an execution.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the timeout.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "previousEventId": {
                        "description": "The id of the previous event.",
                        "type": "integer"
                    },
                    "stateEnteredEventDetails": {
                        "description": "Contains details about a state entered during an execution.",
                        "properties": {
                            "input": {
                                "description": "The string that contains the JSON input data for the state.",
                                "format": "password",
                                "maxLength": 32768,
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ],
                        "type": "object"
                    },
                    "stateExitedEventDetails": {
                        "description": "Contains details about an exit from a state during an execution.",
                        "properties": {
                            "name": {
                                "description": "<p>The name of the state.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            },
                            "output": {
                                "description": "The JSON output data of the state.",
                                "format": "password",
                                "maxLength": 32768,
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ],
                        "type": "object"
                    },
                    "taskFailedEventDetails": {
                        "description": "Contains details about the failure of a task.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the failure.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "resource": {
                                "description": "The service name of the resource in a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            },
                            "resourceType": {
                                "description": "The action of the resource called by a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "resourceType",
                            "resource"
                        ],
                        "type": "object"
                    },
                    "taskScheduledEventDetails": {
                        "description": "Contains details about a task that was scheduled.",
                        "properties": {
                            "parameters": {
                                "description": "The JSON data passed to the resource referenced in a task state.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "region": {
                                "description": "The region of the scheduled task",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            },
                            "resource": {
                                "description": "The service name of the resource in a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            },
                            "resourceType": {
                                "description": "The action of the resource called by a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            },
                            "timeoutInSeconds": {
                                "description": "The maximum allowed duration of the task.",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "resourceType",
                            "resource",
                            "region",
                            "parameters"
                        ],
                        "type": "object"
                    },
                    "taskStartFailedEventDetails": {
                        "description": "Contains details about a task that failed to start.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the failure.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "resource": {
                                "description": "The service name of the resource in a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            },
                            "resourceType": {
                                "description": "The action of the resource called by a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "resourceType",
                            "resource"
                        ],
                        "type": "object"
                    },
                    "taskStartedEventDetails": {
                        "description": "Contains details about a task that was started.",
                        "properties": {
                            "resource": {
                                "description": "The service name of the resource in a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            },
                            "resourceType": {
                                "description": "The action of the resource called by a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "resourceType",
                            "resource"
                        ],
                        "type": "object"
                    },
                    "taskSubmitFailedEventDetails": {
                        "description": "Contains details about a task that where the submit failed.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the failure.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "resource": {
                                "description": "The service name of the resource in a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            },
                            "resourceType": {
                                "description": "The action of the resource called by a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "resourceType",
                            "resource"
                        ],
                        "type": "object"
                    },
                    "taskSubmittedEventDetails": {
                        "description": "Contains details about a submitted task.",
                        "properties": {
                            "output": {
                                "description": "The response from a resource when a task has started.",
                                "format": "password",
                                "maxLength": 32768,
                                "type": "string"
                            },
                            "resource": {
                                "description": "The service name of the resource in a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            },
                            "resourceType": {
                                "description": "The action of the resource called by a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "resourceType",
                            "resource"
                        ],
                        "type": "object"
                    },
                    "taskSucceededEventDetails": {
                        "description": "Contains details about a task that succeeded.",
                        "properties": {
                            "output": {
                                "description": "The full JSON response from a resource when a task has succeeded. This response becomes the output of the related task.",
                                "format": "password",
                                "maxLength": 32768,
                                "type": "string"
                            },
                            "resource": {
                                "description": "The service name of the resource in a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            },
                            "resourceType": {
                                "description": "The action of the resource called by a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "resourceType",
                            "resource"
                        ],
                        "type": "object"
                    },
                    "taskTimedOutEventDetails": {
                        "description": "Contains details about a task that timed out.",
                        "properties": {
                            "cause": {
                                "description": "A more detailed explanation of the cause of the failure.",
                                "format": "password",
                                "maxLength": 32768,
                                "minLength": 0,
                                "type": "string"
                            },
                            "error": {
                                "description": "The error code of the failure.",
                                "format": "password",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "resource": {
                                "description": "The service name of the resource in a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            },
                            "resourceType": {
                                "description": "The action of the resource called by a task state.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "resourceType",
                            "resource"
                        ],
                        "type": "object"
                    },
                    "timestamp": {
                        "description": "The date and time the event occurred.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of the event.",
                        "enum": [
                            "ActivityFailed",
                            "ActivityScheduleFailed",
                            "ActivityScheduled",
                            "ActivityStarted",
                            "ActivitySucceeded",
                            "ActivityTimedOut",
                            "ChoiceStateEntered",
                            "ChoiceStateExited",
                            "TaskFailed",
                            "TaskScheduled",
                            "TaskStartFailed",
                            "TaskStarted",
                            "TaskSubmitFailed",
                            "TaskSubmitted",
                            "TaskSucceeded",
                            "TaskTimedOut",
                            "ExecutionFailed",
                            "ExecutionStarted",
                            "ExecutionSucceeded",
                            "ExecutionAborted",
                            "ExecutionTimedOut",
                            "FailStateEntered",
                            "LambdaFunctionFailed",
                            "LambdaFunctionScheduleFailed",
                            "LambdaFunctionScheduled",
                            "LambdaFunctionStartFailed",
                            "LambdaFunctionStarted",
                            "LambdaFunctionSucceeded",
                            "LambdaFunctionTimedOut",
                            "SucceedStateEntered",
                            "SucceedStateExited",
                            "TaskStateAborted",
                            "TaskStateEntered",
                            "TaskStateExited",
                            "PassStateEntered",
                            "PassStateExited",
                            "ParallelStateAborted",
                            "ParallelStateEntered",
                            "ParallelStateExited",
                            "ParallelStateFailed",
                            "ParallelStateStarted",
                            "ParallelStateSucceeded",
                            "WaitStateAborted",
                            "WaitStateEntered",
                            "WaitStateExited"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "timestamp",
                    "type",
                    "id"
                ],
                "type": "object"
            },
            "HistoryEventList": {
                "description": "Contains details about the events that occurred during an execution.",
                "items": {
                    "description": "Contains details about the events of an execution.",
                    "properties": {
                        "activityFailedEventDetails": {
                            "description": "Contains details about an activity that failed during an execution.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the failure.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "activityScheduleFailedEventDetails": {
                            "description": "Contains details about an activity schedule event that failed during an execution.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the failure.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "activityScheduledEventDetails": {
                            "description": "Contains details about an activity scheduled during an execution.",
                            "properties": {
                                "heartbeatInSeconds": {
                                    "description": "The maximum allowed duration between two heartbeats for the activity task.",
                                    "type": "integer"
                                },
                                "input": {
                                    "description": "The JSON data input to the activity task.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "type": "string"
                                },
                                "resource": {
                                    "description": "The Amazon Resource Name (ARN) of the scheduled activity.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "timeoutInSeconds": {
                                    "description": "The maximum allowed duration of the activity task.",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "resource"
                            ],
                            "type": "object"
                        },
                        "activityStartedEventDetails": {
                            "description": "Contains details about the start of an activity during an execution.",
                            "properties": {
                                "workerName": {
                                    "description": "The name of the worker that the task is assigned to. These names are provided by the workers when calling <a>GetActivityTask</a>.",
                                    "maxLength": 256,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "activitySucceededEventDetails": {
                            "description": "Contains details about an activity that successfully terminated during an execution.",
                            "properties": {
                                "output": {
                                    "description": "The JSON data output by the activity task.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "activityTimedOutEventDetails": {
                            "description": "Contains details about an activity timeout that occurred during an execution.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the timeout.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "executionAbortedEventDetails": {
                            "description": "Contains details about an abort of an execution.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the failure.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "executionFailedEventDetails": {
                            "description": "Contains details about an execution failure event.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the failure.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "executionStartedEventDetails": {
                            "description": "Contains details about the start of the execution.",
                            "properties": {
                                "input": {
                                    "description": "The JSON data input to the execution.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "type": "string"
                                },
                                "roleArn": {
                                    "description": "The Amazon Resource Name (ARN) of the IAM role used for executing AWS Lambda tasks.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "executionSucceededEventDetails": {
                            "description": "Contains details about the successful termination of the execution.",
                            "properties": {
                                "output": {
                                    "description": "The JSON data output by the execution.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "executionTimedOutEventDetails": {
                            "description": "Contains details about the execution timeout that occurred during the execution.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the timeout.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "id": {
                            "description": "The id of the event. Events are numbered sequentially, starting at one.",
                            "type": "integer"
                        },
                        "lambdaFunctionFailedEventDetails": {
                            "description": "Contains details about a lambda function that failed during an execution.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the failure.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "lambdaFunctionScheduleFailedEventDetails": {
                            "description": "Contains details about a failed lambda function schedule event that occurred during an execution.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the failure.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "lambdaFunctionScheduledEventDetails": {
                            "description": "Contains details about a lambda function scheduled during an execution.",
                            "properties": {
                                "input": {
                                    "description": "The JSON data input to the lambda function.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "type": "string"
                                },
                                "resource": {
                                    "description": "The Amazon Resource Name (ARN) of the scheduled lambda function.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "timeoutInSeconds": {
                                    "description": "The maximum allowed duration of the lambda function.",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "resource"
                            ],
                            "type": "object"
                        },
                        "lambdaFunctionStartFailedEventDetails": {
                            "description": "Contains details about a lambda function that failed to start during an execution.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the failure.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "lambdaFunctionSucceededEventDetails": {
                            "description": "Contains details about a lambda function that terminated successfully during an execution.",
                            "properties": {
                                "output": {
                                    "description": "The JSON data output by the lambda function.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "lambdaFunctionTimedOutEventDetails": {
                            "description": "Contains details about a lambda function timeout that occurred during an execution.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the timeout.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "previousEventId": {
                            "description": "The id of the previous event.",
                            "type": "integer"
                        },
                        "stateEnteredEventDetails": {
                            "description": "Contains details about a state entered during an execution.",
                            "properties": {
                                "input": {
                                    "description": "The string that contains the JSON input data for the state.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "type": "object"
                        },
                        "stateExitedEventDetails": {
                            "description": "Contains details about an exit from a state during an execution.",
                            "properties": {
                                "name": {
                                    "description": "<p>The name of the state.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "output": {
                                    "description": "The JSON output data of the state.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "type": "object"
                        },
                        "taskFailedEventDetails": {
                            "description": "Contains details about the failure of a task.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the failure.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "resource": {
                                    "description": "The service name of the resource in a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "resourceType": {
                                    "description": "The action of the resource called by a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "resourceType",
                                "resource"
                            ],
                            "type": "object"
                        },
                        "taskScheduledEventDetails": {
                            "description": "Contains details about a task that was scheduled.",
                            "properties": {
                                "parameters": {
                                    "description": "The JSON data passed to the resource referenced in a task state.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "region": {
                                    "description": "The region of the scheduled task",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "resource": {
                                    "description": "The service name of the resource in a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "resourceType": {
                                    "description": "The action of the resource called by a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "timeoutInSeconds": {
                                    "description": "The maximum allowed duration of the task.",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "resourceType",
                                "resource",
                                "region",
                                "parameters"
                            ],
                            "type": "object"
                        },
                        "taskStartFailedEventDetails": {
                            "description": "Contains details about a task that failed to start.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the failure.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "resource": {
                                    "description": "The service name of the resource in a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "resourceType": {
                                    "description": "The action of the resource called by a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "resourceType",
                                "resource"
                            ],
                            "type": "object"
                        },
                        "taskStartedEventDetails": {
                            "description": "Contains details about a task that was started.",
                            "properties": {
                                "resource": {
                                    "description": "The service name of the resource in a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "resourceType": {
                                    "description": "The action of the resource called by a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "resourceType",
                                "resource"
                            ],
                            "type": "object"
                        },
                        "taskSubmitFailedEventDetails": {
                            "description": "Contains details about a task that where the submit failed.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the failure.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "resource": {
                                    "description": "The service name of the resource in a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "resourceType": {
                                    "description": "The action of the resource called by a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "resourceType",
                                "resource"
                            ],
                            "type": "object"
                        },
                        "taskSubmittedEventDetails": {
                            "description": "Contains details about a submitted task.",
                            "properties": {
                                "output": {
                                    "description": "The response from a resource when a task has started.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "type": "string"
                                },
                                "resource": {
                                    "description": "The service name of the resource in a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "resourceType": {
                                    "description": "The action of the resource called by a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "resourceType",
                                "resource"
                            ],
                            "type": "object"
                        },
                        "taskSucceededEventDetails": {
                            "description": "Contains details about a task that succeeded.",
                            "properties": {
                                "output": {
                                    "description": "The full JSON response from a resource when a task has succeeded. This response becomes the output of the related task.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "type": "string"
                                },
                                "resource": {
                                    "description": "The service name of the resource in a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "resourceType": {
                                    "description": "The action of the resource called by a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "resourceType",
                                "resource"
                            ],
                            "type": "object"
                        },
                        "taskTimedOutEventDetails": {
                            "description": "Contains details about a task that timed out.",
                            "properties": {
                                "cause": {
                                    "description": "A more detailed explanation of the cause of the failure.",
                                    "format": "password",
                                    "maxLength": 32768,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "error": {
                                    "description": "The error code of the failure.",
                                    "format": "password",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "resource": {
                                    "description": "The service name of the resource in a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "resourceType": {
                                    "description": "The action of the resource called by a task state.",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "resourceType",
                                "resource"
                            ],
                            "type": "object"
                        },
                        "timestamp": {
                            "description": "The date and time the event occurred.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "type": {
                            "description": "The type of the event.",
                            "enum": [
                                "ActivityFailed",
                                "ActivityScheduleFailed",
                                "ActivityScheduled",
                                "ActivityStarted",
                                "ActivitySucceeded",
                                "ActivityTimedOut",
                                "ChoiceStateEntered",
                                "ChoiceStateExited",
                                "TaskFailed",
                                "TaskScheduled",
                                "TaskStartFailed",
                                "TaskStarted",
                                "TaskSubmitFailed",
                                "TaskSubmitted",
                                "TaskSucceeded",
                                "TaskTimedOut",
                                "ExecutionFailed",
                                "ExecutionStarted",
                                "ExecutionSucceeded",
                                "ExecutionAborted",
                                "ExecutionTimedOut",
                                "FailStateEntered",
                                "LambdaFunctionFailed",
                                "LambdaFunctionScheduleFailed",
                                "LambdaFunctionScheduled",
                                "LambdaFunctionStartFailed",
                                "LambdaFunctionStarted",
                                "LambdaFunctionSucceeded",
                                "LambdaFunctionTimedOut",
                                "SucceedStateEntered",
                                "SucceedStateExited",
                                "TaskStateAborted",
                                "TaskStateEntered",
                                "TaskStateExited",
                                "PassStateEntered",
                                "PassStateExited",
                                "ParallelStateAborted",
                                "ParallelStateEntered",
                                "ParallelStateExited",
                                "ParallelStateFailed",
                                "ParallelStateStarted",
                                "ParallelStateSucceeded",
                                "WaitStateAborted",
                                "WaitStateEntered",
                                "WaitStateExited"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "timestamp",
                        "type",
                        "id"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "HistoryEventType": {
                "enum": [
                    "ActivityFailed",
                    "ActivityScheduleFailed",
                    "ActivityScheduled",
                    "ActivityStarted",
                    "ActivitySucceeded",
                    "ActivityTimedOut",
                    "ChoiceStateEntered",
                    "ChoiceStateExited",
                    "TaskFailed",
                    "TaskScheduled",
                    "TaskStartFailed",
                    "TaskStarted",
                    "TaskSubmitFailed",
                    "TaskSubmitted",
                    "TaskSucceeded",
                    "TaskTimedOut",
                    "ExecutionFailed",
                    "ExecutionStarted",
                    "ExecutionSucceeded",
                    "ExecutionAborted",
                    "ExecutionTimedOut",
                    "FailStateEntered",
                    "LambdaFunctionFailed",
                    "LambdaFunctionScheduleFailed",
                    "LambdaFunctionScheduled",
                    "LambdaFunctionStartFailed",
                    "LambdaFunctionStarted",
                    "LambdaFunctionSucceeded",
                    "LambdaFunctionTimedOut",
                    "SucceedStateEntered",
                    "SucceedStateExited",
                    "TaskStateAborted",
                    "TaskStateEntered",
                    "TaskStateExited",
                    "PassStateEntered",
                    "PassStateExited",
                    "ParallelStateAborted",
                    "ParallelStateEntered",
                    "ParallelStateExited",
                    "ParallelStateFailed",
                    "ParallelStateStarted",
                    "ParallelStateSucceeded",
                    "WaitStateAborted",
                    "WaitStateEntered",
                    "WaitStateExited"
                ],
                "type": "string"
            },
            "Identity": {
                "maxLength": 256,
                "type": "string"
            },
            "InvalidArn": {},
            "InvalidDefinition": {},
            "InvalidExecutionInput": {},
            "InvalidName": {},
            "InvalidOutput": {},
            "InvalidToken": {},
            "LambdaFunctionFailedEventDetails": {
                "description": "Contains details about a lambda function that failed during an execution.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the failure.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LambdaFunctionScheduleFailedEventDetails": {
                "description": "Contains details about a failed lambda function schedule event that occurred during an execution.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the failure.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LambdaFunctionScheduledEventDetails": {
                "description": "Contains details about a lambda function scheduled during an execution.",
                "properties": {
                    "input": {
                        "description": "The JSON data input to the lambda function.",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    },
                    "resource": {
                        "description": "The Amazon Resource Name (ARN) of the scheduled lambda function.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "timeoutInSeconds": {
                        "description": "The maximum allowed duration of the lambda function.",
                        "type": "integer"
                    }
                },
                "required": [
                    "resource"
                ],
                "type": "object"
            },
            "LambdaFunctionStartFailedEventDetails": {
                "description": "Contains details about a lambda function that failed to start during an execution.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the failure.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LambdaFunctionSucceededEventDetails": {
                "description": "Contains details about a lambda function that successfully terminated during an execution.",
                "properties": {
                    "output": {
                        "description": "The JSON data output by the lambda function.",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LambdaFunctionTimedOutEventDetails": {
                "description": "Contains details about a lambda function timeout that occurred during an execution.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the timeout.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListActivitiesInput": {
                "properties": {
                    "maxResults": {
                        "description": "<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>",
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "nextToken": {
                        "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListActivitiesOutput": {
                "properties": {
                    "activities": {
                        "description": "The list of activities.",
                        "items": {
                            "description": "Contains details about an activity.",
                            "properties": {
                                "activityArn": {
                                    "description": "The Amazon Resource Name (ARN) that identifies the activity.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "creationDate": {
                                    "description": "The date the activity is created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "<p>The name of the activity.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "activityArn",
                                "name",
                                "creationDate"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "activities"
                ],
                "type": "object"
            },
            "ListExecutionsInput": {
                "properties": {
                    "maxResults": {
                        "description": "<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>",
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "nextToken": {
                        "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "stateMachineArn": {
                        "description": "The Amazon Resource Name (ARN) of the state machine whose executions is listed.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "statusFilter": {
                        "description": "If specified, only list the executions whose current execution status matches the given filter.",
                        "enum": [
                            "RUNNING",
                            "SUCCEEDED",
                            "FAILED",
                            "TIMED_OUT",
                            "ABORTED"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "stateMachineArn"
                ],
                "type": "object"
            },
            "ListExecutionsOutput": {
                "properties": {
                    "executions": {
                        "description": "The list of matching executions.",
                        "items": {
                            "description": "Contains details about an execution.",
                            "properties": {
                                "executionArn": {
                                    "description": "The Amazon Resource Name (ARN) that identifies the execution.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "<p>The name of the execution.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "startDate": {
                                    "description": "The date the execution started.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "stateMachineArn": {
                                    "description": "The Amazon Resource Name (ARN) of the executed state machine.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "status": {
                                    "description": "The current status of the execution.",
                                    "enum": [
                                        "RUNNING",
                                        "SUCCEEDED",
                                        "FAILED",
                                        "TIMED_OUT",
                                        "ABORTED"
                                    ],
                                    "type": "string"
                                },
                                "stopDate": {
                                    "description": "If the execution already ended, the date the execution stopped.",
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "executionArn",
                                "stateMachineArn",
                                "name",
                                "status",
                                "startDate"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "executions"
                ],
                "type": "object"
            },
            "ListStateMachinesInput": {
                "properties": {
                    "maxResults": {
                        "description": "<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>",
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "nextToken": {
                        "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListStateMachinesOutput": {
                "properties": {
                    "nextToken": {
                        "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "stateMachines": {
                        "items": {
                            "description": "Contains details about the state machine.",
                            "properties": {
                                "creationDate": {
                                    "description": "The date the state machine is created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "<p>The name of the state machine.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                                    "maxLength": 80,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "stateMachineArn": {
                                    "description": "The Amazon Resource Name (ARN) that identifies the state machine.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "stateMachineArn",
                                "name",
                                "creationDate"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "stateMachines"
                ],
                "type": "object"
            },
            "ListTagsForResourceInput": {
                "properties": {
                    "resourceArn": {
                        "description": "The Amazon Resource Name (ARN) for the Step Functions state machine or activity.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "resourceArn"
                ],
                "type": "object"
            },
            "ListTagsForResourceOutput": {
                "properties": {
                    "tags": {
                        "description": "An array of tags associated with the resource.",
                        "items": {
                            "description": "Tags are key-value pairs that can be associated with Step Functions state machines and activities.",
                            "properties": {
                                "key": {
                                    "description": "The key of a tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The value of a tag.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "MissingRequiredParameter": {},
            "Name": {
                "maxLength": 80,
                "minLength": 1,
                "type": "string"
            },
            "PageSize": {
                "maximum": 1000,
                "minimum": 0,
                "type": "integer"
            },
            "PageToken": {
                "maxLength": 1024,
                "minLength": 1,
                "type": "string"
            },
            "ResourceNotFound": {},
            "ReverseOrder": {
                "type": "boolean"
            },
            "SendTaskFailureInput": {
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the failure.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "taskToken": {
                        "description": "The token that represents this task. Task tokens are generated by the service when the tasks are assigned to a worker (see GetActivityTask::taskToken).",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "taskToken"
                ],
                "type": "object"
            },
            "SendTaskFailureOutput": {
                "properties": {},
                "type": "object"
            },
            "SendTaskHeartbeatInput": {
                "properties": {
                    "taskToken": {
                        "description": "The token that represents this task. Task tokens are generated by the service when the tasks are assigned to a worker (see <a>GetActivityTaskOutput$taskToken</a>).",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "taskToken"
                ],
                "type": "object"
            },
            "SendTaskHeartbeatOutput": {
                "properties": {},
                "type": "object"
            },
            "SendTaskSuccessInput": {
                "properties": {
                    "output": {
                        "description": "The JSON output of the task.",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    },
                    "taskToken": {
                        "description": "The token that represents this task. Task tokens are generated by the service when the tasks are assigned to a worker (see <a>GetActivityTaskOutput$taskToken</a>).",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "taskToken",
                    "output"
                ],
                "type": "object"
            },
            "SendTaskSuccessOutput": {
                "properties": {},
                "type": "object"
            },
            "SensitiveCause": {
                "format": "password",
                "maxLength": 32768,
                "minLength": 0,
                "type": "string"
            },
            "SensitiveData": {
                "format": "password",
                "maxLength": 32768,
                "type": "string"
            },
            "SensitiveDataJobInput": {
                "format": "password",
                "maxLength": 65536,
                "type": "string"
            },
            "SensitiveError": {
                "format": "password",
                "maxLength": 256,
                "minLength": 0,
                "type": "string"
            },
            "StartExecutionInput": {
                "properties": {
                    "input": {
                        "description": "<p>The string that contains the JSON input data for the execution, for example:</p> <p> <code>\"input\": \"{\\\"first_name\\\" : \\\"test\\\"}\"</code> </p> <note> <p>If you don't include any JSON input data, you still must include the two braces, for example: <code>\"input\": \"{}\"</code> </p> </note>",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    },
                    "name": {
                        "description": "<p>The name of the execution. This name must be unique for your AWS account, region, and state machine for 90 days. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/limits.html#service-limits-state-machine-executions\"> Limits Related to State Machine Executions</a> in the <i>AWS Step Functions Developer Guide</i>.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "stateMachineArn": {
                        "description": "The Amazon Resource Name (ARN) of the state machine to execute.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "stateMachineArn"
                ],
                "type": "object"
            },
            "StartExecutionOutput": {
                "properties": {
                    "executionArn": {
                        "description": "The Amazon Resource Name (ARN) that identifies the execution.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "startDate": {
                        "description": "The date the execution is started.",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "executionArn",
                    "startDate"
                ],
                "type": "object"
            },
            "StateEnteredEventDetails": {
                "description": "Contains details about a state entered during an execution.",
                "properties": {
                    "input": {
                        "description": "The string that contains the JSON input data for the state.",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "StateExitedEventDetails": {
                "description": "Contains details about an exit from a state during an execution.",
                "properties": {
                    "name": {
                        "description": "<p>The name of the state.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "output": {
                        "description": "The JSON output data of the state.",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "StateMachineAlreadyExists": {},
            "StateMachineDeleting": {},
            "StateMachineDoesNotExist": {},
            "StateMachineLimitExceeded": {},
            "StateMachineList": {
                "items": {
                    "description": "Contains details about the state machine.",
                    "properties": {
                        "creationDate": {
                            "description": "The date the state machine is created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "name": {
                            "description": "<p>The name of the state machine.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                            "maxLength": 80,
                            "minLength": 1,
                            "type": "string"
                        },
                        "stateMachineArn": {
                            "description": "The Amazon Resource Name (ARN) that identifies the state machine.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "stateMachineArn",
                        "name",
                        "creationDate"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "StateMachineListItem": {
                "description": "Contains details about the state machine.",
                "properties": {
                    "creationDate": {
                        "description": "The date the state machine is created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "description": "<p>The name of the state machine.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "stateMachineArn": {
                        "description": "The Amazon Resource Name (ARN) that identifies the state machine.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "stateMachineArn",
                    "name",
                    "creationDate"
                ],
                "type": "object"
            },
            "StateMachineStatus": {
                "enum": [
                    "ACTIVE",
                    "DELETING"
                ],
                "type": "string"
            },
            "StopExecutionInput": {
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the failure.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "executionArn": {
                        "description": "The Amazon Resource Name (ARN) of the execution to stop.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "executionArn"
                ],
                "type": "object"
            },
            "StopExecutionOutput": {
                "properties": {
                    "stopDate": {
                        "description": "The date the execution is stopped.",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "stopDate"
                ],
                "type": "object"
            },
            "Tag": {
                "description": "Tags are key-value pairs that can be associated with Step Functions state machines and activities.",
                "properties": {
                    "key": {
                        "description": "The key of a tag.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "value": {
                        "description": "The value of a tag.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TagKey": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "TagKeyList": {
                "items": {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                },
                "type": "array"
            },
            "TagList": {
                "items": {
                    "description": "Tags are key-value pairs that can be associated with Step Functions state machines and activities.",
                    "properties": {
                        "key": {
                            "description": "The key of a tag.",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "value": {
                            "description": "The value of a tag.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "TagResourceInput": {
                "properties": {
                    "resourceArn": {
                        "description": "The Amazon Resource Name (ARN) for the Step Functions state machine or activity.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "tags": {
                        "description": "<p>The list of tags to add to a resource.</p> <p>Tags may only contain unicode letters, digits, whitespace, or these symbols: <code>_ . : / = + - @</code>.</p>",
                        "items": {
                            "description": "Tags are key-value pairs that can be associated with Step Functions state machines and activities.",
                            "properties": {
                                "key": {
                                    "description": "The key of a tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The value of a tag.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "resourceArn",
                    "tags"
                ],
                "type": "object"
            },
            "TagResourceOutput": {
                "properties": {},
                "type": "object"
            },
            "TagValue": {
                "maxLength": 256,
                "minLength": 0,
                "type": "string"
            },
            "TaskDoesNotExist": {},
            "TaskFailedEventDetails": {
                "description": "Contains details about a task failure event.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the failure.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "resource": {
                        "description": "The service name of the resource in a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "resourceType": {
                        "description": "The action of the resource called by a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "resourceType",
                    "resource"
                ],
                "type": "object"
            },
            "TaskScheduledEventDetails": {
                "description": "Contains details about a task scheduled during an execution.",
                "properties": {
                    "parameters": {
                        "description": "The JSON data passed to the resource referenced in a task state.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "region": {
                        "description": "The region of the scheduled task",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "resource": {
                        "description": "The service name of the resource in a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "resourceType": {
                        "description": "The action of the resource called by a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "timeoutInSeconds": {
                        "description": "The maximum allowed duration of the task.",
                        "type": "integer"
                    }
                },
                "required": [
                    "resourceType",
                    "resource",
                    "region",
                    "parameters"
                ],
                "type": "object"
            },
            "TaskStartFailedEventDetails": {
                "description": "Contains details about a task that failed to start during an execution.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the failure.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "resource": {
                        "description": "The service name of the resource in a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "resourceType": {
                        "description": "The action of the resource called by a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "resourceType",
                    "resource"
                ],
                "type": "object"
            },
            "TaskStartedEventDetails": {
                "description": "Contains details about the start of a task during an execution.",
                "properties": {
                    "resource": {
                        "description": "The service name of the resource in a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "resourceType": {
                        "description": "The action of the resource called by a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "resourceType",
                    "resource"
                ],
                "type": "object"
            },
            "TaskSubmitFailedEventDetails": {
                "description": "Contains details about a task that failed to submit during an execution.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the failure.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "resource": {
                        "description": "The service name of the resource in a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "resourceType": {
                        "description": "The action of the resource called by a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "resourceType",
                    "resource"
                ],
                "type": "object"
            },
            "TaskSubmittedEventDetails": {
                "description": "Contains details about a task submitted to a resource .",
                "properties": {
                    "output": {
                        "description": "The response from a resource when a task has started.",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    },
                    "resource": {
                        "description": "The service name of the resource in a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "resourceType": {
                        "description": "The action of the resource called by a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "resourceType",
                    "resource"
                ],
                "type": "object"
            },
            "TaskSucceededEventDetails": {
                "description": "Contains details about the successful completion of a task state.",
                "properties": {
                    "output": {
                        "description": "The full JSON response from a resource when a task has succeeded. This response becomes the output of the related task.",
                        "format": "password",
                        "maxLength": 32768,
                        "type": "string"
                    },
                    "resource": {
                        "description": "The service name of the resource in a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "resourceType": {
                        "description": "The action of the resource called by a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "resourceType",
                    "resource"
                ],
                "type": "object"
            },
            "TaskTimedOut": {},
            "TaskTimedOutEventDetails": {
                "description": "Contains details about a resource timeout that occurred during an execution.",
                "properties": {
                    "cause": {
                        "description": "A more detailed explanation of the cause of the failure.",
                        "format": "password",
                        "maxLength": 32768,
                        "minLength": 0,
                        "type": "string"
                    },
                    "error": {
                        "description": "The error code of the failure.",
                        "format": "password",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "resource": {
                        "description": "The service name of the resource in a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "resourceType": {
                        "description": "The action of the resource called by a task state.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "resourceType",
                    "resource"
                ],
                "type": "object"
            },
            "TaskToken": {
                "maxLength": 1024,
                "minLength": 1,
                "type": "string"
            },
            "TimeoutInSeconds": {
                "type": "integer"
            },
            "Timestamp": {
                "format": "date-time",
                "type": "string"
            },
            "TooManyTags": {},
            "UntagResourceInput": {
                "properties": {
                    "resourceArn": {
                        "description": "The Amazon Resource Name (ARN) for the Step Functions state machine or activity.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "tagKeys": {
                        "description": "The list of tags to remove from the resource.",
                        "items": {
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "resourceArn",
                    "tagKeys"
                ],
                "type": "object"
            },
            "UntagResourceOutput": {
                "properties": {},
                "type": "object"
            },
            "UpdateStateMachineInput": {
                "properties": {
                    "definition": {
                        "description": "The Amazon States Language definition of the state machine. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a>.",
                        "format": "password",
                        "maxLength": 1048576,
                        "minLength": 1,
                        "type": "string"
                    },
                    "roleArn": {
                        "description": "The Amazon Resource Name (ARN) of the IAM role of the state machine.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "stateMachineArn": {
                        "description": "The Amazon Resource Name (ARN) of the state machine.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "stateMachineArn"
                ],
                "type": "object"
            },
            "UpdateStateMachineOutput": {
                "properties": {
                    "updateDate": {
                        "description": "The date and time the state machine was updated.",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "updateDate"
                ],
                "type": "object"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "ListActivitiesBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "maxResults": {
                                    "description": "<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>",
                                    "maximum": 1000,
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "nextToken": {
                                    "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.",
                                    "maxLength": 1024,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}